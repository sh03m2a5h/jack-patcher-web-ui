openapi: 3.0.0
info:
  title: JACK Web API
  description: JACK Audio Connection KitのWeb API
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
paths:
  /api/jack/control/server:
    get:
      summary: JACKサーバーの状態を取得します
      tags:
        - JACK Control
      responses:
        "200":
          description: JACK server status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: running
                    enum:
                      - running
                      - stopped
        "400":
          description: JACK server not running
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: JACKサーバーを起動します
      tags:
        - JACK Control
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JackServerConfig"
      responses:
        "200":
          description: JACK started
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: JACK already started
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: JACKサーバーを停止します
      tags:
        - JACK Control
      responses:
        "200":
          description: JACK stopped
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: JACK already stopped
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/alsa/devices:
    get:
      summary: ALSAデバイスの一覧を取得します
      tags:
        - ALSA Devices
      responses:
        "200":
          description: ALSA devices
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    deviceName:
                      type: string
                      example: hw:0
                    playback:
                      type: object
                      properties:
                        format:
                          type: string
                          enum: [s16_le, s24_3le, s32_le]
                        rate:
                          type: array
                          items:
                            type: integer
                            example: [44100, 48000, 96000]
                        channels:
                          type: integer
                          example: 2
                    capture:
                      type: object
                      properties:
                        format:
                          type: string
                          enum: [s16_le, s24_3le, s32_le]
                        rate:
                          type: array
                          items:
                            type: integer
                            example: [44100, 48000, 96000]
                        channels:
                          type: integer
                          example: 2
        "400":
          description: JACK server not running
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/alsa/load:
    post:
      summary: ALSAデバイスをJACKにロードします
      tags:
        - ALSA Load
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlsaLoadConfig"
      responses:
        "200":
          description: ALSA device configuration loaded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: ALSA device already loaded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: ALSAデバイスをJACKからアンロードします
      tags:
        - ALSA Load
      parameters:
        - name: device_id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ALSA device configuration unloaded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: ALSA device already unloaded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/jack/ports:
    get:
      summary: JACKサーバーのポート一覧を取得します
      tags:
        - JACK Ports
      responses:
        "200":
          description: JACK server ports
          content:
            application/json:
              schema:
                type: object
                properties:
                  ports:
                    type: array
                    items:
                      type: string
                    example: [system:capture_1, system:playback_1]
        "400":
          description: JACK server not running
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/jack/patches:
    get:
      summary: 接続されているJACKサーバーのポートを取得します
      tags:
        - JACK Patches
      responses:
        "200":
          description: Connected JACK server ports
          content:
            application/json:
              schema:
                type: object
                properties:
                  ports:
                    type: array
                    items:
                      $ref: "#/components/schemas/JackPatch"
        "400":
          description: JACK server not running
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: JACKサーバーのポートを接続します
      tags:
        - JACK Patches
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JackPatch"
      responses:
        "200":
          description: Ports connected
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: Ports already connected
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: JACKサーバーのポート接続を解除します
      tags:
        - JACK Patches
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JackPatch"
      responses:
        "200":
          description: Ports disconnected
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: Ports already disconnected
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    JackServerConfig:
      type: object
      properties:
        rate:
          type: integer
          example: 48000
        period:
          type: integer
          example: 128
      required:
        - rate
        - period

    AlsaLoadConfig:
      type: object
      properties:
        deviceId:
          type: string
        client:
          type: string
          enum:
            - zalsa
            - alsa
        rate:
          type: integer
        period:
          type: integer
        nperiods:
          type: integer
      required:
        - deviceId
        - client
        - rate
        - period
        - nperiods
    JackPatch:
      type: object
      properties:
        source:
          type: string
          example: system:capture_1
        destination:
          type: string
          example: system:playback_1
    Success:
      type: object
      properties:
        message:
          type: string
          example: Success
    Error:
      type: object
      properties:
        message:
          type: string
          example: Error message
